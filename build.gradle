plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.liquibase.gradle' version '2.2.2'
}

group = 'com.greaticker'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//basic start
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//liquibase
	implementation 'org.liquibase:liquibase-core:4.23.2'
	liquibaseRuntime 'org.liquibase:liquibase-core:4.23.2'
	liquibaseRuntime 'com.mysql:mysql-connector-j'
	liquibaseRuntime 'info.picocli:picocli:4.6.3'
	//queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // QueryDSL JPA 의존성 추가
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta' // QueryDSL APT 의존성 추가
	//OAuth 2.0
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.google.api-client:google-api-client:1.33.0'
	implementation 'com.google.oauth-client:google-oauth-client:1.33.0'
	implementation 'com.google.http-client:google-http-client-jackson2:1.41.8'
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	testImplementation 'org.springframework.security:spring-security-test'
	//Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.lettuce:lettuce-core:6.3.2.RELEASE'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
	//Kafka
	//implementation 'org.springframework.kafka:spring-kafka'
	//OPEN API
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

}

liquibase {
	activities.register("main") {
		changelogFile 'src/main/resources/db/changelog/db.changelog-master.xml'
		url 'jdbc:mysql://localhost:3306/greaticker'
		username System.getenv("GREATICKER_DB_USERNAME")
		password System.getenv("GREATICKER_DB_PASSWORD")
		driver 'com.mysql.cj.jdbc.Driver'
	}
	runList = 'main'
}

tasks.named('test') {
	useJUnitPlatform()
}
